name: üöÄ Deploy Laravel App to Production

on:
  push:
    branches:
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üõí Checkout code
        uses: actions/checkout@v3

      - name: üß∂ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: üß± Build assets
        run: |
          npm ci
          npm run build

      - name: üß† Set production paths in index.php
        run: |
          sed -i "s|__DIR__.'/../storage/framework/maintenance.php'|__DIR__.'/../laravel_project/storage/framework/maintenance.php'|" public/index.php
          sed -i "s|__DIR__.'/../vendor/autoload.php'|__DIR__.'/../laravel_project/vendor/autoload.php'|" public/index.php
          sed -i "s|__DIR__.'/../bootstrap/app.php'|__DIR__.'/../laravel_project/bootstrap/app.php'|" public/index.php

      - name: üîë Setup SSH key for authentication
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: üîß Enable maintenance mode
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
            cd /domains/${{ secrets.DOMAIN }}/laravel_project && \
            php artisan down --retry=60 --render='errors::503'" || true

      - name: üöö Upload application files to server
        run: |
          rsync -avz --delete \
            --exclude=node_modules \
            --exclude=.git \
            --exclude=.env \
            --exclude=vendor \
            --exclude=public/build \
            --exclude=storage/app/public \
            --exclude=storage/logs \
            --exclude=storage/framework/sessions \
            --exclude=storage/framework/cache \
            --exclude=storage/framework/views \
            -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
            ./ \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/domains/${{ secrets.DOMAIN }}/laravel_project

      - name: üì¶ Install Composer dependencies on server
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
            cd /domains/${{ secrets.DOMAIN }}/laravel_project && \
            composer install --no-dev --optimize-autoloader --no-interaction"

      - name: üóÑÔ∏è Run database migrations
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
            cd /domains/${{ secrets.DOMAIN }}/laravel_project && \
            php artisan migrate --force"

      - name: üßπ Clean public/build before deploying new assets
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
            rm -rf /domains/${{ secrets.DOMAIN }}/DEFAULT/build"

      - name: üåê Deploy public files to DEFAULT
        run: |
          rsync -avz \
            --exclude=.htaccess \
            --exclude=storage \
            -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
            ./public/ \
            ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/domains/${{ secrets.DOMAIN }}/DEFAULT/

      - name: üßº Optimize application
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
            cd /domains/${{ secrets.DOMAIN }}/laravel_project && \
            php artisan config:cache && \
            php artisan route:cache && \
            php artisan view:cache && \
            php artisan event:cache"

      - name: üîê Set permissions
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
            chmod -R 775 /domains/${{ secrets.DOMAIN }}/laravel_project/storage && \
            chmod -R 775 /domains/${{ secrets.DOMAIN }}/laravel_project/bootstrap/cache"

      - name: ‚úÖ Disable maintenance mode
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
            cd /domains/${{ secrets.DOMAIN }}/laravel_project && \
            php artisan up"
        if: always()

      - name: üß™ Verify deployment
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
            cd /domains/${{ secrets.DOMAIN }}/laravel_project && \
            php artisan --version"
