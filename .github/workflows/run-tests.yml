name: Run Tests

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testing
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --host=localhost --user=root --password=root" --health-interval=10s --health-timeout=5s --health-retries=10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          extensions: mbstring, bcmath, pdo, pdo_mysql, json, dom, curl, libxml
          coverage: none

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: |
            vendor
            ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Copy environment file
        run: cp .env.ci .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            if mysqladmin ping -h"127.0.0.1" -uroot -proot --silent; then
              echo "MySQL is ready!"
              exit 0
            fi
            echo "Waiting for MySQL... ($i/30)"
            sleep 1
          done
          echo "MySQL failed to become ready"
          exit 1

      - name: Check database connection
        run: |
          mysql -h 127.0.0.1 -uuser -ppassword -e "SHOW DATABASES;"

      - name: Install NPM dependencies
        run: npm install

      - name: Build Vite assets
        run: npm run build

      - name: Run database migrations
        run: php artisan migrate --env=testing --force

      - name: Run PHP tests
        run: php artisan test

      - name: Install npm dependencies
        run: npm ci

      - name: Run JavaScript/Vue tests
        run: npx vitest run --reporter=verbose

