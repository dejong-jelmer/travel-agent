name: AI Code Review (Claude)

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  pull-requests: write
  contents: read

jobs:
  review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Bun (snelle runtime)
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: |
          bun install @actions/core @actions/github node-fetch@3

      - name: Run AI Code Review
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          bunx tsx <<'EOF'
          import { getInput, setFailed } from "@actions/core";
          import { context, getOctokit } from "@actions/github";
          import fetch from "node-fetch";

          const { payload, repo } = context;
          const octokit = getOctokit(process.env.GITHUB_TOKEN);
          const pr = payload.pull_request;
          if (!pr) {
            console.log("No pull request context, skipping");
            process.exit(0);
          }

          // Haal diff op
          const diffUrl = pr.diff_url;
          const diff = await fetch(diffUrl, {
            headers: { Authorization: `token ${process.env.GITHUB_TOKEN}` },
          }).then(r => r.text());

          console.log("ðŸ“¦ Diff length:", diff.length);

          // Send diff to Claude
          const response = await fetch("https://api.anthropic.com/v1/messages", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              "x-api-key": process.env.ANTHROPIC_API_KEY,
            },
            body: JSON.stringify({
              model: "claude-3-5-sonnet-20241022",
              max_tokens: 1500,
              messages: [
                { role: "system", content: "You're an experienced software engineer who conducts code reviews. Provide concise, concrete, and constructive feedback on code quality, security, and readability." },
                { role: "user", content: `Perform a code review on this diff:\n\n${diff}` },
              ],
            }),
          }).then(r => r.json());

          const review = response.content?.[0]?.text || "No feedback received.";

          // Post comment for PR
          await octokit.rest.issues.createComment({
            owner: repo.owner,
            repo: repo.repo,
            issue_number: pr.number,
            body: `ðŸ¤– **AI Code Review by Claude:**\n\n${review}`,
          });

          console.log("âœ… Review posted!");
          EOF
